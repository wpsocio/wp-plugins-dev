{
	"type": "object",
	"properties": {
		"$schema": {
			"type": "string",
			"description": "The schema URL."
		},
		"project": {
			"type": "object",
			"properties": {
				"title": {
					"type": "string",
					"description": "The project title. e.g. \"WP Telegram Login\"."
				},
				"key": {
					"type": "string",
					"description": "The project key. Parts separated by underscore e.g. \"wptelegram_login\"."
				},
				"slug": {
					"type": "string",
					"description": "The project slug. Parts separated by hyphen e.g. \"wptelegram-login\"."
				}
			},
			"required": [
				"key",
				"slug"
			],
			"additionalProperties": false
		},
		"bundle": {
			"type": "object",
			"properties": {
				"tasks": {
					"type": "array",
					"items": {
						"anyOf": [
							{
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"const": "copyFiles"
									},
									"data": {
										"type": "object",
										"properties": {
											"sourceDir": {
												"type": "string",
												"default": "src",
												"description": "The source directory."
											},
											"destDir": {
												"type": "string",
												"default": "dist/{slug}",
												"description": "The destination directory."
											},
											"ignore": {
												"type": "array",
												"items": {
													"type": "string"
												},
												"description": "The glob pattern for files to ignore."
											}
										},
										"additionalProperties": false
									}
								},
								"required": [
									"type"
								],
								"additionalProperties": false
							},
							{
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"const": "createArchive"
									},
									"data": {
										"type": "object",
										"properties": {
											"outPath": {
												"type": "string",
												"default": "{slug}-{version}.zip",
												"description": "The path to the output file. Defaults to {slug}-{version}.zip."
											}
										},
										"additionalProperties": false
									}
								},
								"required": [
									"type"
								],
								"additionalProperties": false
							},
							{
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"const": "generatePot"
									},
									"data": {
										"type": "object",
										"properties": {
											"source": {
												"type": "string",
												"default": "src",
												"description": "The source directory."
											},
											"textDomain": {
												"type": "string",
												"default": "{slug}",
												"description": "The text domain. Can be {slug}."
											},
											"headers": {
												"type": "object",
												"additionalProperties": {
													"type": "string"
												},
												"description": "The headers to pass to wp-cli i18n make-pot."
											},
											"mergeFiles": {
												"type": "array",
												"items": {
													"type": "string"
												},
												"default": [
													"src/languages/js-translations.pot"
												],
												"description": "The list of POT files to merge."
											},
											"makePotArgs": {
												"type": "object",
												"additionalProperties": {
													"type": "string"
												},
												"description": "The additional arguments to pass to wp-cli i18n make-pot."
											}
										},
										"additionalProperties": false
									}
								},
								"required": [
									"type"
								],
								"additionalProperties": false
							},
							{
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"const": "jsPotToPhp"
									},
									"data": {
										"type": "object",
										"properties": {
											"potFile": {
												"type": "string",
												"default": "src/languages/js-translations.pot",
												"description": "The path to the POT file."
											},
											"textDomain": {
												"type": "string",
												"default": "{slug}",
												"description": "The text domain. Can be {slug}."
											}
										},
										"additionalProperties": false
									}
								},
								"required": [
									"type"
								],
								"additionalProperties": false
							},
							{
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"const": "makeMoFiles"
									},
									"data": {
										"type": "object",
										"properties": {
											"source": {
												"type": "string",
												"default": "src/languages/",
												"description": "The source directory that contains the .po files."
											}
										},
										"additionalProperties": false
									}
								},
								"required": [
									"type"
								],
								"additionalProperties": false
							},
							{
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"const": "postScripts"
									},
									"data": {
										"type": "array",
										"items": {
											"type": "string"
										},
										"description": "The list of npm scripts to run."
									}
								},
								"required": [
									"type"
								],
								"additionalProperties": false
							},
							{
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"const": "preScripts"
									},
									"data": {
										"$ref": "#/properties/bundle/properties/tasks/items/anyOf/5/properties/data",
										"description": "The list of npm scripts to run."
									}
								},
								"required": [
									"type"
								],
								"additionalProperties": false
							},
							{
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"const": "processStyles"
									},
									"data": {
										"type": "object",
										"properties": {
											"files": {
												"anyOf": [
													{
														"type": "string"
													},
													{
														"type": "array",
														"items": {
															"type": "string"
														}
													}
												],
												"description": "The glob pattern for target files.",
												"default": [
													"src/assets/static/css/*.css"
												]
											},
											"ignore": {
												"$ref": "#/properties/bundle/properties/tasks/items/anyOf/0/properties/data/properties/ignore",
												"description": "The glob pattern for files to ignore.",
												"default": [
													"src/assets/static/css/*.min.css"
												]
											}
										},
										"additionalProperties": false
									}
								},
								"required": [
									"type"
								],
								"additionalProperties": false
							},
							{
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"const": "updatePoFiles"
									},
									"data": {
										"type": "object",
										"properties": {
											"source": {
												"type": "string",
												"default": "src/languages/{slug}.pot",
												"description": "The source POT file."
											}
										},
										"additionalProperties": false
									}
								},
								"required": [
									"type"
								],
								"additionalProperties": false
							},
							{
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"const": "updateRequirements"
									},
									"data": {
										"type": "object",
										"properties": {
											"requirements": {
												"type": "object",
												"properties": {
													"requiresPHP": {
														"type": "string",
														"description": "The minimum required PHP version."
													},
													"requiresAtLeast": {
														"type": "string",
														"description": "The minimum required WordPress version."
													},
													"testedUpTo": {
														"type": "string",
														"description": "The tested up to WordPress version."
													}
												},
												"required": [
													"requiresPHP",
													"requiresAtLeast",
													"testedUpTo"
												],
												"additionalProperties": false
											},
											"target": {
												"type": "object",
												"properties": {
													"files": {
														"$ref": "#/properties/bundle/properties/tasks/items/anyOf/7/properties/data/properties/files"
													},
													"ignore": {
														"$ref": "#/properties/bundle/properties/tasks/items/anyOf/0/properties/data/properties/ignore"
													}
												},
												"additionalProperties": false,
												"description": "The target files."
											}
										},
										"required": [
											"requirements",
											"target"
										],
										"additionalProperties": false
									}
								},
								"required": [
									"type",
									"data"
								],
								"additionalProperties": false
							},
							{
								"type": "object",
								"properties": {
									"type": {
										"type": "string",
										"const": "updateVersion"
									},
									"data": {
										"type": "array",
										"items": {
											"anyOf": [
												{
													"type": "object",
													"properties": {
														"type": {
															"type": "string",
															"enum": [
																"packageJson",
																"composerJson",
																"readmeFiles",
																"pluginMainFile",
																"themeStylesheet",
																"sinceTag"
															]
														},
														"files": {
															"$ref": "#/properties/bundle/properties/tasks/items/anyOf/7/properties/data/properties/files"
														},
														"ignore": {
															"$ref": "#/properties/bundle/properties/tasks/items/anyOf/0/properties/data/properties/ignore"
														}
													},
													"required": [
														"type"
													],
													"additionalProperties": false
												},
												{
													"type": "object",
													"properties": {
														"type": {
															"type": "string",
															"const": "general"
														},
														"textPatterns": {
															"type": "array",
															"items": {
																"type": "object",
																"properties": {
																	"pattern": {
																		"type": "string"
																	},
																	"flags": {
																		"type": "string"
																	}
																},
																"required": [
																	"pattern"
																],
																"additionalProperties": false
															},
															"description": "The text patterns to match. Regex can also be used."
														},
														"files": {
															"$ref": "#/properties/bundle/properties/tasks/items/anyOf/7/properties/data/properties/files"
														},
														"ignore": {
															"$ref": "#/properties/bundle/properties/tasks/items/anyOf/0/properties/data/properties/ignore"
														}
													},
													"required": [
														"type",
														"textPatterns"
													],
													"additionalProperties": false
												}
											]
										}
									}
								},
								"required": [
									"type"
								],
								"additionalProperties": false
							}
						]
					}
				}
			},
			"required": [
				"tasks"
			],
			"additionalProperties": false,
			"description": "The bundling configuration."
		}
	},
	"required": [
		"project",
		"bundle"
	],
	"additionalProperties": false,
	"$schema": "http://json-schema.org/draft-07/schema#"
}